/*
 * Copyright 2018 Grinn
 *
 * Author: Michal Mironiski <m.mironiski@grinn-global.com>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License
 *     version 2 as published by the Free Software Foundation.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

#include "imx6ul-litesom.dtsi"

/ {
	model = "Grinn i.MX6UL LoRa Gateway";
	compatible = "grinn,imx6ul-liteboard", "grinn,imx6ul-litesom",
		     "fsl,imx6ul";

	chosen {
		stdout-path = &uart1;
	};
};

&gpio1 {
	gpio-line-names = "", "", "", "", "", "", "", "LR_RESET", "", "GPIO4",
			"", "", "", "", "", "", "", "", "", "",
			"", "", "", "", "", "", "", "", "", "",
			"", "";

	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_gpio1>;
};

&gpio2 {
	gpio-line-names = "", "", "", "", "", "", "", "", "", "",
			"", "4G_ON_OFF", "4G_PWR_EN", "", "", "", "", "", "", "",
			"", "", "", "", "", "", "", "", "", "",
			"", "";

	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_gpio2>;
};

&gpio5 {
	gpio-line-names = "GPS_EN", "", "GPIO0", "", "GPIO1", "", "GPIO3", "", "", "GPIO2",
			"", "", "", "", "", "", "", "", "", "",
			"", "", "", "", "", "", "", "", "", "",
			"", "";

	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_gpio5>;
};

&iomuxc {
        pinctrl_gpio1: gpio1grp {
                fsl,pins = <
                        MX6UL_PAD_GPIO1_IO07__GPIO1_IO07        0x010b1
                        MX6UL_PAD_GPIO1_IO09__GPIO1_IO09        0x010b1
		>;
	};
        
        pinctrl_gpio2: gpio2grp {
                fsl,pins = <
                        MX6UL_PAD_ENET2_TX_DATA0__GPIO2_IO11    0x010b1
                        MX6UL_PAD_ENET2_TX_DATA1__GPIO2_IO12    0x010b1
		>;
	};
        
        pinctrl_gpio5: gpio5grp {
		fsl,pins = <
                        MX6UL_PAD_SNVS_TAMPER0__GPIO5_IO00      0x010b1
                        MX6UL_PAD_SNVS_TAMPER2__GPIO5_IO02      0x010b1
                        MX6UL_PAD_SNVS_TAMPER4__GPIO5_IO04      0x010b1
                        MX6UL_PAD_SNVS_TAMPER6__GPIO5_IO06      0x010b1
                        MX6UL_PAD_SNVS_TAMPER9__GPIO5_IO09      0x010b1
		>;
	};
        
	pinctrl_enet1: enet1grp {
		fsl,pins = <
			MX6UL_PAD_ENET2_RX_DATA0__ENET1_MDIO	0x1b0b0
			MX6UL_PAD_ENET2_RX_DATA1__ENET1_MDC	0x1b0b0
			MX6UL_PAD_ENET1_RX_EN__ENET1_RX_EN	0x1b0b0
			MX6UL_PAD_ENET1_RX_ER__ENET1_RX_ER	0x1b0b0
			MX6UL_PAD_ENET1_RX_DATA0__ENET1_RDATA00 0x1b0b0
			MX6UL_PAD_ENET1_RX_DATA1__ENET1_RDATA01 0x1b0b0
			MX6UL_PAD_ENET1_TX_EN__ENET1_TX_EN	0x1b0b0
			MX6UL_PAD_ENET1_TX_DATA0__ENET1_TDATA00 0x1b0b0
			MX6UL_PAD_ENET1_TX_DATA1__ENET1_TDATA01 0x1b0b0
			MX6UL_PAD_ENET1_TX_CLK__ENET1_REF_CLK1	0x4001b031
		>;
	};

	pinctrl_uart1: uart1grp {
		fsl,pins = <
			MX6UL_PAD_UART1_TX_DATA__UART1_DCE_TX	0x1b0b1
			MX6UL_PAD_UART1_RX_DATA__UART1_DCE_RX	0x1b0b1
		>;
	};

	pinctrl_uart3: uart3grp {
		fsl,pins = <
			MX6UL_PAD_UART3_TX_DATA__UART3_DCE_TX	0x1b0b1
			MX6UL_PAD_UART3_RX_DATA__UART3_DCE_RX	0x1b0b1
		>;
	};

	pinctrl_usdhc1: usdhc1grp {
		fsl,pins = <
			MX6UL_PAD_CSI_DATA05__USDHC1_CD_B	0x17059
			MX6UL_PAD_SD1_CMD__USDHC1_CMD		0x17059
			MX6UL_PAD_SD1_CLK__USDHC1_CLK		0x10071
			MX6UL_PAD_SD1_DATA0__USDHC1_DATA0	0x17059
			MX6UL_PAD_SD1_DATA1__USDHC1_DATA1	0x17059
			MX6UL_PAD_SD1_DATA2__USDHC1_DATA2	0x17059
			MX6UL_PAD_SD1_DATA3__USDHC1_DATA3	0x17059
		>;
	};
	pinctrl_ecspi2: ecspi2grp {
		fsl,pins = <
			MX6UL_PAD_UART4_TX_DATA__ECSPI2_SCLK	0x100b1
			MX6UL_PAD_UART4_RX_DATA__GPIO1_IO29	0x1f0b1
			MX6UL_PAD_UART5_TX_DATA__ECSPI2_MOSI	0x100b1
			MX6UL_PAD_UART5_RX_DATA__ECSPI2_MISO	0x100b1
		>;
	};
};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet1>;
	phy-mode = "rmii";
	phy-handle = <&ethphy0>;
	phy-reset-gpios = <&gpio3 4 GPIO_ACTIVE_LOW>;
	phy-reset-post-delay = <10>;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@0 {
			reg = <0>;
		};
	};
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	status = "okay";
};

&usbotg1 {
	dr_mode = "host";
	status = "okay";
};

&usbotg2 {
	dr_mode = "host";
	status = "okay";
};

&usdhc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc1>;
	cd-gpios = <&gpio4 26 GPIO_ACTIVE_LOW>;
	no-1-8-v;
	keep-power-in-suspend;
	wakeup-source;
	status = "okay";
};

&ecspi2 {
	fsl,spi-num-chipselects=<1>;
	cs-gpios = <&gpio1 29 0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	status = "okay";
	spidev@0 {
		compatible = "linux,spidev";
		spi-max-frequency = <20000000>;
		reg = <0>;
	};
};
